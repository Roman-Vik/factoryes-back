import 'dotenv/config'
import express, { Request, Response} from 'express'
import mongoose from 'mongoose'
import cors from 'cors'
import router from './routes/index.js'
import { fileURLToPath } from 'url';
import path,{ dirname } from 'path';

const app = express()
app.use(express.json())
app.use(cors())


const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

//  —Å–æ–æ–±—â–∞–µ–º —ç–∫—Å–ø—Ä–µ—Å—Å-–º–æ–¥—É–ª—é, —á—Ç–æ –ø—É–±–ª–∏—á–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ - —ç—Ç–æ –≤—Å–µ –¥–ª—è —Ä–µ—Å—É—Ä—Å–æ–≤ –Ω–∞—à–µ–≥–æ —Å–∞–π—Ç–∞
app.use(express.static(path.join(__dirname, 'public')));
// sendFile will go here
app.get('/', function(req:Request,res:Response) {
  res.sendFile(path.join(__dirname, '/public/pages/main.html'));
});
app.get('/table', function(req:Request,res:Response) {
  res.sendFile(path.join(__dirname, '/public/pages/table.html'));
});

app.use("/factory",router)


async function run(): Promise<void> {
  try {
    const DB: string | undefined = process.env.DB_URL
    if (DB !== undefined) {
      console.log(DB)
      await mongoose.connect(DB)
    } else {
      console.error('–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è DB –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã.')
    }
    app.listen(process.env.PORT, () => {
      console.log('üöÄ', `http://${process.env.HOST}:${process.env.PORT}`)
    })
  } catch (error: unknown | undefined) {
    console.log("–û—à–∏–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞",error)
  }
}

run()
